# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import aws_email_pb2 as aws__email__pb2


class EmailServiceStub(object):
  """for grpc-gateway
  #gw#import "google/api/annotations.proto";

  *
  aws-sdk-go 调用sendmail
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendMail = channel.unary_unary(
        '/protos.EmailService/SendMail',
        request_serializer=aws__email__pb2.EmailRequest.SerializeToString,
        response_deserializer=aws__email__pb2.EmailResponse.FromString,
        )


class EmailServiceServicer(object):
  """for grpc-gateway
  #gw#import "google/api/annotations.proto";

  *
  aws-sdk-go 调用sendmail
  """

  def SendMail(self, request, context):
    """/ 发送邮件 
    #gw#  option (google.api.http) = {
    #gw#  post: "/v1/email/sendmail"
    #gw#  body: "*"
    #gw#  };
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EmailServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendMail': grpc.unary_unary_rpc_method_handler(
          servicer.SendMail,
          request_deserializer=aws__email__pb2.EmailRequest.FromString,
          response_serializer=aws__email__pb2.EmailResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protos.EmailService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
